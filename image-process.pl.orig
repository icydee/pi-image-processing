#!/usr/bin/perl

use strict;
use warnings;
use File::Copy;
use Data::Printer;

# Move files into a sub-directory based on the date
my $root_dir = '/home/icydee/images/';
opendir(my $dh, $root_dir);
my @files = readdir($dh);

FILE:
foreach my $file (@files) {
    my ($date, $time, $postfix) = $file =~ m/img_(\d\d\d\d\d\d)-(\d\d\d\d)_(.)\.jpg/;
    next FILE if not $date;
    #print "FILE [$date][$time][$postfix]\n";
    # check if directory exists, if not, create it
    my $dir = $root_dir.$date.'/';
    print("DIR: [$dir]\n");
    if ( not ( -e $dir ) ) {
        # Create the directory.
        print("Create dir [$dir]\n");
	mkdir($dir);
    }
    # Copy file to directory
    move( $root_dir.$file, $dir.$file );
}

# Now process each directory
opendir($dh, $root_dir);
@files = readdir($dh);
DIR:
foreach my $dir (@files) {
    next DIR if not (-d $root_dir.$dir);
    my ($subdir) = $dir =~ m/(\d\d\d\d\d\d)/;
    if ($subdir) {
        # Process all groups of files in this dir
        opendir(my $sub, $root_dir.$dir);
        my @sub_files = readdir($sub);

        my $files_hash;
        foreach my $sub_file (@sub_files) {
            my ($time, $postfix) = $sub_file =~ m/img_${subdir}-(\d\d\d\d)_(.)\.jpg/;
            if ($time) {
                $files_hash->{$time}{$postfix} = $sub_file;
            }
        }
        print(p($files_hash));

	my $idx = '0001';
        # Now process each file group
        foreach my $key (sort keys %$files_hash) {
            my $file_hash = $files_hash->{$key};
            my $calc_filename = sub {
                my ($postfix) = @_;

		return $root_dir.$subdir."/img_${subdir}-${key}_${postfix}.jpg";
            };
            if ($file_hash->{x}) {
#                if (! $file_hash->{o}) {
                    my $outfile = $root_dir.$subdir."/img_${idx}.jpg";

                    print("Create file $outfile\n");
                    my $cmd = "enfuse -o $outfile ";
                    foreach my $postfix (sort keys %$file_hash) {
                        $cmd .= &$calc_filename($postfix)." ";
                    }
                    my $stdout = `$cmd`;
                    print $stdout;
                    $idx++;
#                }
            }
        }
    }
}


